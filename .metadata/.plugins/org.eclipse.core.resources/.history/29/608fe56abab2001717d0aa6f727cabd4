package playground;

public class TryRecursion {

	public static void main(String[] args) {
		System.out.println("2^0 = "+recPow(0));
		System.out.println("2^-2 = "+recPow(-2));
		System.out.println("2^10 = "+recPow(10));
	}

	public static Double recPow(int n) {
		if (n == 0) {
			return 1.0;
		}else if(n > 0){
			return 2*recPow(n-1);
		}else {
			return recPow(n+1)/2;
		}
	}
	
	public static int[] mergeSort(int[] a, int[] b) {
		
	}
	public static int[] split(int[] a) {
		
	}
    public static int[] mergeSortedArrays(int[] arr1, int[] arr2){
       int i = 0, j = 0, k = 0;
       int n1 = arr1.length;
       int n2 = arr2.length;
       int[] arr3 = new int[n1+n2];

       while (i<n1 && j <n2){
          if (arr1[i] < arr2[j])
               arr3[k++] = arr1[i++];
          else
               arr3[k++] = arr2[j++];
          }

       while (i < n1)
          arr3[k++] = arr1[i++];
       while (j < n2)
           arr3[k++] = arr2[j++];
       return arr3;
      }
    
    public static int[] spilt(int[] a) {
		
	}


}
